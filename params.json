{"name":"Two.js","tagline":"A renderer agnostic two-dimensional drawing api for the web.","body":"two.js\r\n======\r\n\r\n__This is considered alpha grade__. A two-dimensional drawing api meant for modern browsers. It is renderer agnostic enabling the same api to render in multiple contexts: webgl, canvas2d, and svg.\r\n\r\n### Roadmap:\r\n+ Add svg import support.\r\n\r\n### Concerns:\r\n+ `Two.Group` unable to re-add.\r\n+ How does `canvas2d` perform on `ctx.fillStyle` and `ctx.setStyle` at high volumes of particles.\r\n+ How to do stroke properties, namely `miter`, `cap`, and `join`, in `webgl`.\r\n\r\n### Up for discussion:\r\n+ Add `width` and `height` properties to `Two.Polygon`.\r\n+ Add `radius` to `Two.Circle`.\r\n+ Add `Two.Arc`.\r\n+ Add a `z-index` property to `Two.Shape`.\r\n+ Standardized way to apply other types of transformations — namely `skewX`, `skewY`, `scaleX`, `scaleY`.\r\n\r\n### Notes:\r\n+ More information on triangulation [here](https://groups.google.com/forum/?fromgroups=#!topic/poly2tri/d0UL8Kew8dY).\r\n+ For importing svg I’ve implemented the Adaptive Quadratic Bezier Subdivision from [this](http://www.antigrain.com/research/adaptive_bezier/index.html) c++ implementation.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}